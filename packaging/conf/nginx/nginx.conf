user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}
 
http {
    # Currently we run only one node.
    upstream tornado {
        server web:8888;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name wu-labs.com;

        location ^~ /static/ {
            root /AuthService;
            if ($query_string) {
                expires max;
            }
        }
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location ^~ /.well-known/acme-challenge/ {
        	allow all;
            default_type "text/plain";
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name wu-labs.com;
        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        location ^~ /static/ {
            root /AuthService;
            if ($query_string) {
                expires max;
            }
        }
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location / {
            proxy_pass_header  Server;
            proxy_set_header   Host $host;
            proxy_redirect     off;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Scheme $scheme;
            proxy_pass         http://tornado;
        }
    }
}
